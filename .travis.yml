language: julia

notifications:
  email: false

jobs:
  allow_failures:
    - julia: 1.0
    - julia: 1.1
    - julia: 1.2
    - julia: nightly
    - os: osx
    - os: windows
  include:
    ###### Tests
    ### Linux
    - stage: "Unit tests"
      julia: 1.0
      os: linux
      script:
        -  julia --color=yes -e 'using Pkg; Pkg.activate(); Pkg.instantiate(); Pkg.test()'

    - stage: "Unit tests"
      julia: 1.1
      os: linux
      script:
        -  julia --color=yes -e 'using Pkg; Pkg.activate(); Pkg.instantiate(); Pkg.test()'

    - stage: "Unit tests"
      julia: 1.2
      os: linux
      script:
        -  julia --color=yes -e 'using Pkg; Pkg.activate(); Pkg.instantiate(); Pkg.test()'

    - stage: "Unit tests"
      julia: 1.3
      os: linux
      script:
        -  julia --color=yes -e 'using Pkg; Pkg.activate(); Pkg.instantiate(); Pkg.test(coverage=true)'
      after_success:
        # Code coverage
        - julia -e 'using Pkg; Pkg.add("Coverage");'
        - julia -e 'using Coverage; Coveralls.submit(Coveralls.process_folder());'
        - julia -e 'using Coverage; Codecov.submit(Codecov.process_folder());'

    - stage: # Unit tests
      julia: nightly
      os: linux
      script:
        -  julia --color=yes -e 'using Pkg; Pkg.activate(); Pkg.instantiate(); Pkg.test()'

    ### OSX
    - stage: # Unit tests
      julia: 1.3
      os: osx
      script:
        -  julia --color=yes -e 'using Pkg; Pkg.activate(); Pkg.instantiate(); Pkg.test()'

    - stage: # Unit tests
      julia: nightly
      os: osx
      script:
        - julia --color=yes -e 'using Pkg; Pkg.activate(); Pkg.instantiate(); Pkg.test()'
      julia: nightly

    ### Windows
    - stage: # Unit tests
      julia: 1.3
      os: windows
      script:
        -  julia --color=yes -e 'using Pkg; Pkg.activate(); Pkg.instantiate(); Pkg.test()'

    - stage: # Unit tests
      os: windows
      script:
        - julia --color=yes -e 'using Pkg; Pkg.activate(); Pkg.instantiate(); Pkg.test()'

    ### Documentation generation
    - stage: "Documentation"
      julia: 1.3
      os: linux
      dist: bionic
      install:
        - sudo apt-get update
        - sudo apt-get install -y python3.7 python3-pip python3-setuptools
        - pip3 install --upgrade pip
        - pip3 install --user matplotlib
        - julia --project=docs -e 'using Pkg; Pkg.instantiate(); Pkg.add(PackageSpec(path=pwd()));'
        - julia --project=docs -e 'using Pkg; Pkg.build("PyCall");'
      script:
        - julia --project=docs --color=yes docs/make.jl
      after_success: skip
